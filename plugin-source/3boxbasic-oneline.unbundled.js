(function () {function update3Box ({ type, box }, newState) {console.log('3boxbasic update3Box:', `type:${type} box:${box} newState:${newState}`);return box.private.set(type, JSON.stringify(newState));};function registerUpdates (box) {const updatePreferences = update3Box.bind(this, { type: 'preferences', box });console.log('3boxbasic registerUpdates:', `updatePreferences:${updatePreferences} box:${box}`);pluginAPIs.subscribeToPreferencesControllerChanges(updatePreferences);};function restoreFrom3Box (box, address) {box.private.get('preferences').then(backedUpPreferences => {backedUpPreferences && pluginAPIs.updatePreferencesControllerState(JSON.parse(backedUpPreferences));registerUpdates(box);console.log('3boxbasic restoreFrom3Box:', `address:${address} box:${box} backedUpPreferences:${backedUpPreferences}`);updatePluginState({ syncDone3Box: true, threeBoxAddress: address });})};function new3Box (address) {updatePluginState({ syncDone3Box: false });console.log('3boxbasic new3Box 1:', `address:${address}`);pluginAPIs.Box.openBox(address,ethereumProvider).then(box => {box.onSyncDone(() => {restoreFrom3Box(box, address);console.log('3boxbasic new3Box 2:', `address:${address} box:${box}`);updatePluginState({ syncDone3Box: true, threeBoxAddress: address });})})};pluginAPIs.onUnlock(address => {new3Box(address)});})
